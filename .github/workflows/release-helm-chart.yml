name: Release Helm Chart

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Chart version (e.g., 0.1.0)'
        required: true
      update_app_version:
        description: 'Update app version to match latest Docker image'
        type: boolean
        default: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Org Lowercase
        run: echo "ORG=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Update Chart Version
        run: |
          # Update version in Chart.yaml
          sed -i "s/^version:.*/version: ${{ github.event.inputs.version }}/" helm/frontend-chart/Chart.yaml

          # Update appVersion if requested
          if [[ "${{ github.event.inputs.update_app_version }}" == "true" ]]; then
            # Get the latest Docker image tag
            echo "Updating appVersion to match latest Docker image"
            sed -i "s/^appVersion:.*/appVersion: \"latest\"/" helm/frontend-chart/Chart.yaml
          fi

          # Show the changes
          cat helm/frontend-chart/Chart.yaml

      - name: Package Helm Chart
        run: |
          # Package the chart from the correct directory
          helm package helm/frontend-chart

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Helm Chart to GHCR
        run: |
          # Push the chart to GHCR as OCI artifact
          # The chart will be available at oci://ghcr.io/${{ env.ORG }}/charts/newwave4-frontend-chart
          helm push newwave4-frontend-chart-${{ github.event.inputs.version }}.tgz oci://ghcr.io/${{ env.ORG }}/charts

          # Verify that the chart was pushed correctly
          echo "Verifying that the chart was pushed correctly..."

          # For OCI repositories, we don't use helm repo add
          # Instead, we directly pull the chart to verify it exists
          echo "Pulling the chart to verify it exists..."
          helm pull oci://ghcr.io/${{ env.ORG }}/charts/newwave4-frontend-chart --version ${{ github.event.inputs.version }}

          # List the pulled chart file to confirm it was downloaded
          echo "Listing the pulled chart file..."
          ls -la newwave4-frontend-chart-${{ github.event.inputs.version }}.tgz

      - name: Commit and Push Chart Version Update
        run: |
          git add helm/frontend-chart/Chart.yaml
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update Helm chart version to ${{ github.event.inputs.version }}"
            git push
          fi